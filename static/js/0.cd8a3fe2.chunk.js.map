{"version":3,"sources":["../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/react-popper/lib/Manager.js","../node_modules/react-popper/lib/Target.js","../node_modules/react-popper/lib/Popper.js","../node_modules/react-popper/lib/Arrow.js","../node_modules/react-popper/lib/react-popper.js","../node_modules/popper.js/dist/esm/popper.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","listTag","className","a","string","listClassName","cssModule","object","children","node","aria-label","Breadcrumb","props","Tag","ListTag","label","attributes","Object","classes","listClasses","createElement","defaultProps","__webpack_exports__","active","bool","BreadcrumbItem","aria-current","undefined","_createClass","defineProperties","target","i","length","descriptor","enumerable","configurable","writable","defineProperty","key","Constructor","protoProps","staticProps","prototype","_possibleConstructorReturn","self","call","ReferenceError","Manager_Manager","_Component","Manager","_ref","_temp","_this","instance","TypeError","_classCallCheck","this","_len","arguments","args","Array","_key","__proto__","getPrototypeOf","apply","concat","_setTargetNode","_targetNode","_getTargetNode","subClass","superClass","create","constructor","value","setPrototypeOf","_inherits","react","popperManager","setTargetNode","getTargetNode","_props","restProps","obj","keys","indexOf","hasOwnProperty","_objectWithoutProperties","childContextTypes","prop_types_default","isRequired","oneOfType","func","lib_Manager","_extends","assign","source","Target_Target","context","_props$component","component","innerRef","Target_objectWithoutProperties","targetRef","targetProps","ref","componentProps","contextTypes","lib_Target","Popper_extends","Popper_createClass","Popper_possibleConstructorReturn","placements","esm_popper","Popper_Popper","Popper","Popper_classCallCheck","state","_setArrowNode","_arrowNode","Error","_getOffsets","data","offsets","map","_isDataDirty","JSON","stringify","_updateStateModifier","enabled","order","fn","setState","_getPopperStyle","_popper","position","popper","styles","pointerEvents","opacity","_getPopperPlacement","placement","_getPopperHide","hide","_getArrowStyle","arrow","_this$state$data$offs","top","left","_handlePopperRef","_popperNode","_createPopper","_destroyPopper","_scheduleUpdate","scheduleUpdate","Popper_inherits","setArrowNode","getArrowStyle","lastProps","eventsEnabled","_this2","positionFixed","modifiers","applyStyle","updateState","element","setTimeout","destroy","_props2","Popper_objectWithoutProperties","popperStyle","popperPlacement","popperHide","popperProps","style","data-placement","data-x-out-of-boundaries","oneOf","instanceOf","Element","shape","getBoundingClientRect","clientWidth","number","clientHeight","lib_Popper","Arrow_extends","Arrow_Arrow","Arrow_objectWithoutProperties","arrowRef","arrowStyle","arrowProps","lib_Arrow","d","global","isBrowser","window","document","navigator","timeoutDuration","longerTimeoutBrowsers","userAgent","debounce","Promise","called","resolve","then","scheduled","isFunction","functionToCheck","toString","getStyleComputedProperty","property","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","_getStyleComputedProp","overflow","overflowX","overflowY","test","getReferenceNode","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","getRoot","findCommonOffsetParent","element1","element2","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","firstElementChild","isOffsetContainer","element1root","getScroll","upperSide","html","scrollingElement","getBordersSize","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","classCallCheck","createClass","getClientRect","right","bottom","rect","scrollTop","scrollLeft","e","result","sizes","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getFixedPositionOffsetParent","parentElement","el","getBoundaries","padding","boundariesElement","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","_getWindowSizes","isPaddingNumber","computeAutoPlacement","refRect","rects","sortedAreas","area","sort","b","filteredAreas","filter","_ref2","computedPlacement","variation","split","getReferenceOffsets","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","runModifiers","ends","slice","prop","findIndex","cur","match","forEach","console","warn","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","getWindow","setupEventListeners","options","updateBound","addEventListener","passive","scrollElement","attachToScrollParents","event","callback","scrollParents","isBody","push","disableEventListeners","cancelAnimationFrame","removeEventListener","isNumeric","isNaN","isFinite","setStyles","unit","isFirefox","isModifierRequired","requestingName","requestedName","requesting","_requesting","requested","validPlacements","clockwise","counter","index","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","parseOffset","offset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","str","toValue","index2","Defaults","removeOnDestroy","onCreate","onUpdate","shift","shiftvariation","_data$offsets","isVertical","side","shiftOffsets","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","min","keepTogether","floor","opSide","_data$offsets$arrow","arrowElement","querySelector","len","sideCapitalized","toLowerCase","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","round","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","inner","subtractLength","bound","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","shouldRound","noRound","v","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","getRoundedOffsets","devicePixelRatio","prefixedProperty","willChange","invertTop","invertLeft","x-placement","arrowStyles","setAttribute","removeAttribute","onLoad","modifierOptions","requestAnimationFrame","update","bind","isDestroyed","isCreated","jquery","enableEventListeners","removeChild","Utils","PopperUtils"],"mappings":"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","file":"static/js/0.cd8a3fe2.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport { Component, createElement } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Manager = function (_Component) {\n  _inherits(Manager, _Component);\n\n  function Manager() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Manager);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Manager.__proto__ || Object.getPrototypeOf(Manager)).call.apply(_ref, [this].concat(args))), _this), _this._setTargetNode = function (node) {\n      _this._targetNode = node;\n    }, _this._getTargetNode = function () {\n      return _this._targetNode;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Manager, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        popperManager: {\n          setTargetNode: this._setTargetNode,\n          getTargetNode: this._getTargetNode\n        }\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          tag = _props.tag,\n          children = _props.children,\n          restProps = _objectWithoutProperties(_props, ['tag', 'children']);\n\n      if (tag !== false) {\n        return createElement(tag, restProps, children);\n      } else {\n        return children;\n      }\n    }\n  }]);\n\n  return Manager;\n}(Component);\n\nManager.childContextTypes = {\n  popperManager: PropTypes.object.isRequired\n};\nManager.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\nManager.defaultProps = {\n  tag: 'div'\n};\nexport default Manager;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport { createElement } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Target = function Target(props, context) {\n  var _props$component = props.component,\n      component = _props$component === undefined ? 'div' : _props$component,\n      innerRef = props.innerRef,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, ['component', 'innerRef', 'children']);\n\n  var popperManager = context.popperManager;\n\n  var targetRef = function targetRef(node) {\n    popperManager.setTargetNode(node);\n\n    if (typeof innerRef === 'function') {\n      innerRef(node);\n    }\n  };\n\n  if (typeof children === 'function') {\n    var targetProps = {\n      ref: targetRef\n    };\n    return children({\n      targetProps: targetProps,\n      restProps: restProps\n    });\n  }\n\n  var componentProps = _extends({}, restProps);\n\n  if (typeof component === 'string') {\n    componentProps.ref = targetRef;\n  } else {\n    componentProps.innerRef = targetRef;\n  }\n\n  return createElement(component, componentProps, children);\n};\n\nTarget.contextTypes = {\n  popperManager: PropTypes.object.isRequired\n};\nTarget.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  innerRef: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\nexport default Target;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport { Component, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport PopperJS from 'popper.js';\nexport var placements = PopperJS.placements;\n\nvar Popper = function (_Component) {\n  _inherits(Popper, _Component);\n\n  function Popper() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Popper);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Popper.__proto__ || Object.getPrototypeOf(Popper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this._setArrowNode = function (node) {\n      _this._arrowNode = node;\n    }, _this._getTargetNode = function () {\n      if (_this.props.target) {\n        return _this.props.target;\n      } else if (!_this.context.popperManager || !_this.context.popperManager.getTargetNode()) {\n        throw new Error('Target missing. Popper must be given a target from the Popper Manager, or as a prop.');\n      }\n\n      return _this.context.popperManager.getTargetNode();\n    }, _this._getOffsets = function (data) {\n      return Object.keys(data.offsets).map(function (key) {\n        return data.offsets[key];\n      });\n    }, _this._isDataDirty = function (data) {\n      if (_this.state.data) {\n        return JSON.stringify(_this._getOffsets(_this.state.data)) !== JSON.stringify(_this._getOffsets(data));\n      } else {\n        return true;\n      }\n    }, _this._updateStateModifier = {\n      enabled: true,\n      order: 900,\n      fn: function fn(data) {\n        if (_this._isDataDirty(data)) {\n          _this.setState({\n            data: data\n          });\n        }\n\n        return data;\n      }\n    }, _this._getPopperStyle = function () {\n      var data = _this.state.data;\n\n      if (!_this._popper || !data) {\n        return {\n          position: 'absolute',\n          pointerEvents: 'none',\n          opacity: 0\n        };\n      }\n\n      return _extends({\n        position: data.offsets.popper.position\n      }, data.styles);\n    }, _this._getPopperPlacement = function () {\n      return _this.state.data ? _this.state.data.placement : undefined;\n    }, _this._getPopperHide = function () {\n      return !!_this.state.data && _this.state.data.hide ? '' : undefined;\n    }, _this._getArrowStyle = function () {\n      if (!_this.state.data || !_this.state.data.offsets.arrow) {\n        return {};\n      } else {\n        var _this$state$data$offs = _this.state.data.offsets.arrow,\n            top = _this$state$data$offs.top,\n            left = _this$state$data$offs.left;\n        return {\n          top: top,\n          left: left\n        };\n      }\n    }, _this._handlePopperRef = function (node) {\n      _this._popperNode = node;\n\n      if (node) {\n        _this._createPopper();\n      } else {\n        _this._destroyPopper();\n      }\n\n      if (_this.props.innerRef) {\n        _this.props.innerRef(node);\n      }\n    }, _this._scheduleUpdate = function () {\n      _this._popper && _this._popper.scheduleUpdate();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Popper, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        popper: {\n          setArrowNode: this._setArrowNode,\n          getArrowStyle: this._getArrowStyle\n        }\n      };\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(lastProps) {\n      if (lastProps.placement !== this.props.placement || lastProps.eventsEnabled !== this.props.eventsEnabled || lastProps.target !== this.props.target) {\n        this._destroyPopper();\n\n        this._createPopper();\n      }\n\n      if (lastProps.children !== this.props.children) {\n        this._scheduleUpdate();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._destroyPopper();\n    }\n  }, {\n    key: '_createPopper',\n    value: function _createPopper() {\n      var _this2 = this;\n\n      var _props = this.props,\n          placement = _props.placement,\n          eventsEnabled = _props.eventsEnabled,\n          positionFixed = _props.positionFixed;\n\n      var modifiers = _extends({}, this.props.modifiers, {\n        applyStyle: {\n          enabled: false\n        },\n        updateState: this._updateStateModifier\n      });\n\n      if (this._arrowNode) {\n        modifiers.arrow = _extends({}, this.props.modifiers.arrow || {}, {\n          element: this._arrowNode\n        });\n      }\n\n      this._popper = new PopperJS(this._getTargetNode(), this._popperNode, {\n        placement: placement,\n        positionFixed: positionFixed,\n        eventsEnabled: eventsEnabled,\n        modifiers: modifiers\n      }); // TODO: look into setTimeout scheduleUpdate call, without it, the popper will not position properly on creation\n\n      setTimeout(function () {\n        return _this2._scheduleUpdate();\n      });\n    }\n  }, {\n    key: '_destroyPopper',\n    value: function _destroyPopper() {\n      if (this._popper) {\n        this._popper.destroy();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          component = _props2.component,\n          innerRef = _props2.innerRef,\n          placement = _props2.placement,\n          eventsEnabled = _props2.eventsEnabled,\n          positionFixed = _props2.positionFixed,\n          modifiers = _props2.modifiers,\n          children = _props2.children,\n          restProps = _objectWithoutProperties(_props2, ['component', 'innerRef', 'placement', 'eventsEnabled', 'positionFixed', 'modifiers', 'children']);\n\n      var popperStyle = this._getPopperStyle();\n\n      var popperPlacement = this._getPopperPlacement();\n\n      var popperHide = this._getPopperHide();\n\n      if (typeof children === 'function') {\n        var popperProps = {\n          ref: this._handlePopperRef,\n          style: popperStyle,\n          'data-placement': popperPlacement,\n          'data-x-out-of-boundaries': popperHide\n        };\n        return children({\n          popperProps: popperProps,\n          restProps: restProps,\n          scheduleUpdate: this._scheduleUpdate\n        });\n      }\n\n      var componentProps = _extends({}, restProps, {\n        style: _extends({}, restProps.style, popperStyle),\n        'data-placement': popperPlacement,\n        'data-x-out-of-boundaries': popperHide\n      });\n\n      if (typeof component === 'string') {\n        componentProps.ref = this._handlePopperRef;\n      } else {\n        componentProps.innerRef = this._handlePopperRef;\n      }\n\n      return createElement(component, componentProps, children);\n    }\n  }]);\n\n  return Popper;\n}(Component);\n\nPopper.contextTypes = {\n  popperManager: PropTypes.object\n};\nPopper.childContextTypes = {\n  popper: PropTypes.object.isRequired\n};\nPopper.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  innerRef: PropTypes.func,\n  placement: PropTypes.oneOf(placements),\n  eventsEnabled: PropTypes.bool,\n  positionFixed: PropTypes.bool,\n  modifiers: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  target: PropTypes.oneOfType([// the following check is needed for SSR\n  PropTypes.instanceOf(typeof Element !== 'undefined' ? Element : Object), PropTypes.shape({\n    getBoundingClientRect: PropTypes.func.isRequired,\n    clientWidth: PropTypes.number.isRequired,\n    clientHeight: PropTypes.number.isRequired\n  })])\n};\nPopper.defaultProps = {\n  component: 'div',\n  placement: 'bottom',\n  eventsEnabled: true,\n  positionFixed: false,\n  modifiers: {}\n};\nexport default Popper;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport { createElement } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Arrow = function Arrow(props, context) {\n  var _props$component = props.component,\n      component = _props$component === undefined ? 'span' : _props$component,\n      innerRef = props.innerRef,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, ['component', 'innerRef', 'children']);\n\n  var popper = context.popper;\n\n  var arrowRef = function arrowRef(node) {\n    popper.setArrowNode(node);\n\n    if (typeof innerRef === 'function') {\n      innerRef(node);\n    }\n  };\n\n  var arrowStyle = popper.getArrowStyle();\n\n  if (typeof children === 'function') {\n    var arrowProps = {\n      ref: arrowRef,\n      style: arrowStyle\n    };\n    return children({\n      arrowProps: arrowProps,\n      restProps: restProps\n    });\n  }\n\n  var componentProps = _extends({}, restProps, {\n    style: _extends({}, arrowStyle, restProps.style)\n  });\n\n  if (typeof component === 'string') {\n    componentProps.ref = arrowRef;\n  } else {\n    componentProps.innerRef = arrowRef;\n  }\n\n  return createElement(component, componentProps, children);\n};\n\nArrow.contextTypes = {\n  popper: PropTypes.object.isRequired\n};\nArrow.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  innerRef: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\nexport default Arrow;","export { default as Manager } from './Manager';\nexport { default as Target } from './Target';\nexport { default as Popper, placements } from './Popper';\nexport { default as Arrow } from './Arrow';","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.16.1\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n\nvar timeoutDuration = function () {\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n\n  return 0;\n}();\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\n\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\n\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\n\n\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  } // NOTE: 1 DOM access here\n\n\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\n\n\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n\n  return element.parentNode || element.host;\n}\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\n\n\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n\n    case '#document':\n      return element.body;\n  } // Firefox want us to check `-x` and `-y` variations as well\n\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\n\n\nfunction getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\n\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n\n  if (version === 10) {\n    return isIE10;\n  }\n\n  return isIE11 || isIE10;\n}\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\n\n\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here\n\n  var offsetParent = element.offsetParent || null; // Skip hidden elements which don't have an offsetParent\n\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  } // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n\n\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\n\n\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\n\n\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  } // Here we make sure to give as \"start\" the element that comes first in the DOM\n\n\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1; // Get common ancestor container\n\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  } // one of the nodes is inside shadowDOM, find which one\n\n\n  var element1root = getRoot(element1);\n\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\n\n\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\n\n\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar defineProperty = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\n\n\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\n\n\nfunction getBoundingClientRect(element) {\n  var rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  }; // subtract scrollbar size from sizes\n\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.width;\n  var height = sizes.height || element.clientHeight || result.height;\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth); // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop);\n    var marginLeft = parseFloat(styles.marginLeft);\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them\n\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n  return getClientRect(offset);\n}\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\n\n\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n\n  var parentNode = getParentNode(element);\n\n  if (!parentNode) {\n    return false;\n  }\n\n  return isFixed(parentNode);\n}\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n\n  var el = element.parentElement;\n\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n\n  return el || document.documentElement;\n}\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\n\n\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; // NOTE: 1 DOM access here\n\n  var boundaries = {\n    top: 0,\n    left: 0\n  };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference)); // Handle viewport case\n\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation\n\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  } // Add paddings\n\n\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  return width * height;\n}\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n  var variation = placement.split('-')[1];\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\n\n\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\n\n\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\n\n\nfunction getOppositePlacement(placement) {\n  var hash = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n  };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\n\n\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0]; // Get popper node sizes\n\n  var popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object\n\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  }; // depending by the popper placement we have to compute its offsets slightly differently\n\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\n\n\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  } // use `filter` to obtain the same behavior of `find`\n\n\n  return arr.filter(check)[0];\n}\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\n\n\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  } // use `find` + `indexOf` if `findIndex` isn't supported\n\n\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\n\n\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n      data = fn(data, modifier);\n    }\n  });\n  return data;\n}\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\n\n\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  }; // compute reference element offsets\n\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); // store the computed placement inside `originalPlacement`\n\n  data.originalPlacement = data.placement;\n  data.positionFixed = this.options.positionFixed; // compute the popper offsets\n\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; // run the modifiers\n\n  data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\n\n\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\n\n\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n\n  return null;\n}\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\n\n\nfunction destroy() {\n  this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled\n\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners(); // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n\n  return this;\n}\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\n\n\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, {\n    passive: true\n  });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n\n  scrollParents.push(target);\n}\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\n\n\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, {\n    passive: true\n  }); // Scroll event listener on scroll parents\n\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n  return state;\n}\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\n\n\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\n\n\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents\n\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  }); // Reset state\n\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\n\n\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\n\n\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\n\n\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = ''; // add unit if the value is numeric and is one of the following\n\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\n\n\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\n\n\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n\n  setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties\n\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\n\n\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n  popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n\n  setStyles(popper, {\n    position: options.positionFixed ? 'fixed' : 'absolute'\n  });\n  return options;\n}\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\n\n\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper; // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent); // Styles\n\n  var styles = {\n    position: popper.position\n  };\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n\n  var prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n\n  var left = void 0,\n      top = void 0;\n\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  } // Attributes\n\n\n  var attributes = {\n    'x-placement': data.placement\n  }; // Update `data` attributes, styles and arrowStyles\n\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n  return data;\n}\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\n\n\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n\n  return isRequired;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction arrow(data, options) {\n  var _data$offsets$arrow; // arrow depends on keepTogether in order to work\n\n\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier\n\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len]; //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n  // top/left side\n\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  } // bottom/right side\n\n\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  data.offsets.popper = getClientRect(data.offsets.popper); // compute center of the popper\n\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; // prevent arrowElement from being placed not contiguously to its popper\n\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n  return data;\n}\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\n\n\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n\n  return variation;\n}\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\n\n\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; // Get rid of `auto` `auto-start` and `auto-end`\n\nvar validPlacements = placements.slice(3);\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\n\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here\n\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required\n\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1; // flips variation if reference element overflows boundaries\n\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom); // flips variation if popper content overflows boundaries\n\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\n\n\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2]; // If it's not a number it's an operator, I guess\n\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\n\n\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  }); // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  } // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n\n\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; // Convert the values with units to absolute pixels to allow our computations\n\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, []) // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  }); // Loop trough the offsets arrays and execute the operations\n\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var basePlacement = placement.split('-')[0];\n  var offsets = void 0;\n\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  } // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n\n\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n  options.boundaries = boundaries;\n  var order = options.priority;\n  var popper = data.offsets.popper;\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n\n      return defineProperty({}, mainSide, value);\n    }\n  };\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n  data.offsets.popper = popper;\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier\n\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n  return data;\n}\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\n\n\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: offset,\n\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: arrow,\n\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: flip,\n\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\n\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n// Utils\n// Methods\n\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    }; // make update() debounced, so that it only runs at most once-per-tick\n\n\n    this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it\n\n    this.options = _extends({}, Popper.Defaults, options); // init state\n\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    }; // get reference and popper elements (allow jQuery wrappers)\n\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper; // Deep merge modifiers options\n\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    }); // Refactoring modifiers' list (Object => Array)\n\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    }) // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    }); // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    }); // fire the first update to position the popper in the right place\n\n    this.update();\n    var eventsEnabled = this.options.eventsEnabled;\n\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  } // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\nexport default Popper;"],"sourceRoot":""}